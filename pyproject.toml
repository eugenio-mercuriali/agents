[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "agents"
version = "0.1.0"
description = "A multi-agent system for task automation and assistance"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    { name = "Eugenio Mercuriali", email = "eugenio.mercuriali@gmail.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "llama-index>=0.10.0",
    "chromadb>=0.4.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    "llama-index-llms-openai>=0.1.0",
    "llama-index-llms-huggingface>=0.1.0",
    "llama-index-llms-ollama>=0.1.0",
    "llama-index-llms-litellm>=0.1.0",
    "phx-class-registry>=3.0.0",
    "python-dateutil>=2.8.2",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=24.8.0",
    "ruff>=0.6.9",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "RUF", # Ruff-specific rules
]
ignore = [
    "E501",  # line length handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.isort]
known-first-party = ["agents"]

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=src --cov-report=term-missing"
testpaths = [
    "tests",
]
